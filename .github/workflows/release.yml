name: Build Release
on:
  release:
    types: [published]

jobs:
  build-and-release:
    strategy:
      matrix:
        go-version: [1.17.1]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Build and create archives
      run: |
        export OUTPUT_DIR=intellij-plugin-repo-builder-${{ github.event.release.tag_name }}
        export GOARCH=amd64
        export CGO_ENABLED=0

        if [ "$RUNNER_OS" == "Linux" ]; then
          export GOOS=linux
          go build -o ${OUTPUT_DIR}-${GOOS}_${GOARCH}/repo-builder .
        elif [ "$RUNNER_OS" == "Windows" ]; then
          export GOOS=windows
          go build -o ${OUTPUT_DIR}-${GOOS}_${GOARCH}/repo-builder.exe .
        elif [ "$RUNNER_OS" == "macOS" ]; then
          export GOOS=darwin
          go build -o ${OUTPUT_DIR}-${GOOS}_${GOARCH}/repo-builder .
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

        cp config.yaml ${OUTPUT_DIR}-${GOOS}_${GOARCH}/
        tar -czf ${OUTPUT_DIR}-${GOOS}_${GOARCH}.tar.gz ${OUTPUT_DIR}-${GOOS}_${GOARCH}/
      shell: bash
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: '*.tar.gz'
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
